name: Build and Release Python Binary

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies (Unix)
        if: runner.os != 'Windows'
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          python -m venv venv
          .\venv\Scripts\activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable (Unix)
        if: runner.os != 'Windows'
        run: |
          source venv/bin/activate
          pyinstaller --onefile main.py

      - name: Build executable (Windows)
        if: runner.os == 'Windows'
        run: |
          .\venv\Scripts\activate
          pyinstaller --onefile main.py

      - name: Rename binary for OS
        run: |
          mkdir output
          if [ "${{ runner.os }}" = "Windows" ]; then
            mv dist/main.exe output/main-windows.exe
          elif [ "${{ runner.os }}" = "macOS" ]; then
            mv dist/main output/main-macos
          else
            mv dist/main output/main-linux
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ runner.os }}
          path: output/*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}